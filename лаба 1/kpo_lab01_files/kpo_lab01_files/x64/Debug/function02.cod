; Listing generated by Microsoft (R) Optimizing Compiler Version 19.37.32824.0 

include listing.inc

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

msvcjmc	SEGMENT
__C14D6944_function02@cpp DB 01H
msvcjmc	ENDS
PUBLIC	?dayOfYear@@YAHHHH@Z				; dayOfYear
PUBLIC	__JustMyCode_Default
EXTRN	?leapYear@@YA_NH@Z:PROC				; leapYear
EXTRN	_RTC_CheckStackVars:PROC
EXTRN	_RTC_InitBase:PROC
EXTRN	_RTC_Shutdown:PROC
EXTRN	__CheckForDebuggerJustMyCode:PROC
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dayOfYear@@YAHHHH@Z DD imagerel $LN7
	DD	imagerel $LN7+279
	DD	imagerel $unwind$?dayOfYear@@YAHHHH@Z
pdata	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
_RTC_Shutdown.rtc$TMZ DQ FLAT:_RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
_RTC_InitBase.rtc$IMZ DQ FLAT:_RTC_InitBase
rtc$IMZ	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dayOfYear@@YAHHHH@Z DD 025053301H
	DD	0116231bH
	DD	0700f002fH
	DD	0500eH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?dayOfYear@@YAHHHH@Z$rtcName$0 DB 064H			; dayOfYear
	DB	061H
	DB	079H
	DB	073H
	DB	049H
	DB	06eH
	DB	04dH
	DB	06fH
	DB	06eH
	DB	074H
	DB	068H
	DB	00H
	ORG $+4
?dayOfYear@@YAHHHH@Z$rtcVarDesc DD 028H			; dayOfYear
	DD	034H
	DQ	FLAT:?dayOfYear@@YAHHHH@Z$rtcName$0
	ORG $+48
?dayOfYear@@YAHHHH@Z$rtcFrameData DD 01H		; dayOfYear
	DD	00H
	DQ	FLAT:?dayOfYear@@YAHHHH@Z$rtcVarDesc
CONST	ENDS
; Function compile flags: /Odt
;	COMDAT __JustMyCode_Default
_TEXT	SEGMENT
__JustMyCode_Default PROC				; COMDAT
  00000	c2 00 00	 ret	 0
__JustMyCode_Default ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Users\admin\Documents\уник\кпо\лаба 1\kpo_lab01_files\kpo_lab01_files\function02.cpp
;	COMDAT ?dayOfYear@@YAHHHH@Z
_TEXT	SEGMENT
daysInMonth$ = 8
result$ = 84
i$4 = 116
day$ = 368
month$ = 376
year$ = 384
?dayOfYear@@YAHHHH@Z PROC				; dayOfYear, COMDAT

; 4    : int dayOfYear(int day, int month, int year) {

$LN7:
  00000	44 89 44 24 18	 mov	 DWORD PTR [rsp+24], r8d
  00005	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00009	89 4c 24 08	 mov	 DWORD PTR [rsp+8], ecx
  0000d	55		 push	 rbp
  0000e	57		 push	 rdi
  0000f	48 81 ec 78 01
	00 00		 sub	 rsp, 376		; 00000178H
  00016	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001b	48 8d 7c 24 20	 lea	 rdi, QWORD PTR [rsp+32]
  00020	b9 26 00 00 00	 mov	 ecx, 38			; 00000026H
  00025	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002a	f3 ab		 rep stosd
  0002c	8b 8c 24 98 01
	00 00		 mov	 ecx, DWORD PTR [rsp+408]
  00033	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__C14D6944_function02@cpp
  0003a	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 5    :     const int daysInMonth[] = { 0, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31 };

  0003f	c7 45 08 00 00
	00 00		 mov	 DWORD PTR daysInMonth$[rbp], 0
  00046	c7 45 0c 1f 00
	00 00		 mov	 DWORD PTR daysInMonth$[rbp+4], 31
  0004d	c7 45 10 1c 00
	00 00		 mov	 DWORD PTR daysInMonth$[rbp+8], 28
  00054	c7 45 14 1f 00
	00 00		 mov	 DWORD PTR daysInMonth$[rbp+12], 31
  0005b	c7 45 18 1e 00
	00 00		 mov	 DWORD PTR daysInMonth$[rbp+16], 30
  00062	c7 45 1c 1f 00
	00 00		 mov	 DWORD PTR daysInMonth$[rbp+20], 31
  00069	c7 45 20 1e 00
	00 00		 mov	 DWORD PTR daysInMonth$[rbp+24], 30
  00070	c7 45 24 1f 00
	00 00		 mov	 DWORD PTR daysInMonth$[rbp+28], 31
  00077	c7 45 28 1f 00
	00 00		 mov	 DWORD PTR daysInMonth$[rbp+32], 31
  0007e	c7 45 2c 1e 00
	00 00		 mov	 DWORD PTR daysInMonth$[rbp+36], 30
  00085	c7 45 30 1f 00
	00 00		 mov	 DWORD PTR daysInMonth$[rbp+40], 31
  0008c	c7 45 34 1e 00
	00 00		 mov	 DWORD PTR daysInMonth$[rbp+44], 30
  00093	c7 45 38 1f 00
	00 00		 mov	 DWORD PTR daysInMonth$[rbp+48], 31

; 6    :     int result = day;

  0009a	8b 85 70 01 00
	00		 mov	 eax, DWORD PTR day$[rbp]
  000a0	89 45 54	 mov	 DWORD PTR result$[rbp], eax

; 7    : 
; 8    :     for (int i = 1; i < month; ++i) {

  000a3	c7 45 74 01 00
	00 00		 mov	 DWORD PTR i$4[rbp], 1
  000aa	eb 08		 jmp	 SHORT $LN4@dayOfYear
$LN2@dayOfYear:
  000ac	8b 45 74	 mov	 eax, DWORD PTR i$4[rbp]
  000af	ff c0		 inc	 eax
  000b1	89 45 74	 mov	 DWORD PTR i$4[rbp], eax
$LN4@dayOfYear:
  000b4	8b 85 78 01 00
	00		 mov	 eax, DWORD PTR month$[rbp]
  000ba	39 45 74	 cmp	 DWORD PTR i$4[rbp], eax
  000bd	7d 14		 jge	 SHORT $LN3@dayOfYear

; 9    :         result += daysInMonth[i];

  000bf	48 63 45 74	 movsxd	 rax, DWORD PTR i$4[rbp]
  000c3	8b 44 85 08	 mov	 eax, DWORD PTR daysInMonth$[rbp+rax*4]
  000c7	8b 4d 54	 mov	 ecx, DWORD PTR result$[rbp]
  000ca	03 c8		 add	 ecx, eax
  000cc	8b c1		 mov	 eax, ecx
  000ce	89 45 54	 mov	 DWORD PTR result$[rbp], eax

; 10   :     }

  000d1	eb d9		 jmp	 SHORT $LN2@dayOfYear
$LN3@dayOfYear:

; 11   : 
; 12   :     if (month > 2 && leapYear(year)) {

  000d3	83 bd 78 01 00
	00 02		 cmp	 DWORD PTR month$[rbp], 2
  000da	7e 1a		 jle	 SHORT $LN5@dayOfYear
  000dc	8b 8d 80 01 00
	00		 mov	 ecx, DWORD PTR year$[rbp]
  000e2	e8 00 00 00 00	 call	 ?leapYear@@YA_NH@Z	; leapYear
  000e7	0f b6 c0	 movzx	 eax, al
  000ea	85 c0		 test	 eax, eax
  000ec	74 08		 je	 SHORT $LN5@dayOfYear

; 13   :         result += 1;

  000ee	8b 45 54	 mov	 eax, DWORD PTR result$[rbp]
  000f1	ff c0		 inc	 eax
  000f3	89 45 54	 mov	 DWORD PTR result$[rbp], eax
$LN5@dayOfYear:

; 14   :     }
; 15   : 
; 16   :     return result;

  000f6	8b 45 54	 mov	 eax, DWORD PTR result$[rbp]

; 17   : }

  000f9	8b f8		 mov	 edi, eax
  000fb	48 8d 4d e0	 lea	 rcx, QWORD PTR [rbp-32]
  000ff	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?dayOfYear@@YAHHHH@Z$rtcFrameData
  00106	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  0010b	8b c7		 mov	 eax, edi
  0010d	48 8d a5 58 01
	00 00		 lea	 rsp, QWORD PTR [rbp+344]
  00114	5f		 pop	 rdi
  00115	5d		 pop	 rbp
  00116	c3		 ret	 0
?dayOfYear@@YAHHHH@Z ENDP				; dayOfYear
_TEXT	ENDS
END
